name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    branches:
      - main
      - staging
      - develop

env:
  TF_VERSION: '1.5.0'

jobs:
  # Local testing with docker-compose
  local-test:
    name: Local Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      continue-on-error: true
    
    - name: Build Docker image
      run: docker build -t lucitra-webhook-server:test .
    
    - name: Test Docker container
      run: |
        docker run -d --name test-server -p 8080:8080 \
          -e NODE_ENV=test \
          -e PORT=8080 \
          lucitra-webhook-server:test
        sleep 5
        curl -f http://localhost:8080/ || exit 1
        docker stop test-server

  terraform-check:
    name: Terraform Check
    runs-on: ubuntu-latest
    needs: local-test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: ./terraform
    
    - name: Terraform Init
      run: terraform init -backend=false
      working-directory: ./terraform
    
    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.event_name == 'pull_request'
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Plan - ${{ matrix.environment }}
      id: plan
      run: terraform plan -var-file=environments/${{ matrix.environment }}/terraform.tfvars -no-color
      working-directory: ./terraform
      continue-on-error: true
    
    - name: Comment PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `#### Terraform Plan - ${{ matrix.environment }} ðŸ“–
          
          <details><summary>Show Plan</summary>
          
          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: development
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}-dev
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:dev-latest
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var-file=environments/dev/terraform.tfvars \
          -var="image_tag=gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}-dev"
      working-directory: ./terraform

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    environment: staging
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}-staging
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:staging-latest
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var-file=environments/staging/terraform.tfvars \
          -var="image_tag=gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}-staging"
      working-directory: ./terraform
    
    - name: Run Integration Tests
      run: |
        echo "Running integration tests against staging..."
        # Add actual integration tests here

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [terraform-check, deploy-staging]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: 
      name: production
      url: https://api.lucitra.com
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:stable
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var-file=environments/prod/terraform.tfvars \
          -var="image_tag=gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}"
      working-directory: ./terraform
    
    - name: Health Check
      run: |
        echo "Performing health check..."
        # Add actual health check against production