name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  TF_VERSION: '1.5.0'
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:
  terraform-check:
    name: Terraform Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: ./terraform
    
    - name: Terraform Init
      run: terraform init -backend=false
      working-directory: ./terraform
    
    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Plan
      run: terraform plan -var-file=environments/dev/terraform.tfvars -no-color
      working-directory: ./terraform
      continue-on-error: true
    
    - name: Comment PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `#### Terraform Plan ðŸ“–
          
          <details><summary>Show Plan</summary>
          
          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: development
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        project_id: lucitra-ai
    
    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:latest
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var-file=environments/dev/terraform.tfvars \
          -var="image_tag=gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}"
      working-directory: ./terraform

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        project_id: lucitra-ai
    
    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}
        gcloud builds submit --tag gcr.io/lucitra-ai/lucitra-webhook-server:stable
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var-file=environments/prod/terraform.tfvars \
          -var="image_tag=gcr.io/lucitra-ai/lucitra-webhook-server:${{ github.sha }}"
      working-directory: ./terraform