name: Promote Changes

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch to promote from'
        required: true
        type: choice
        options:
          - develop
          - staging
      target_branch:
        description: 'Target branch to promote to'
        required: true
        type: choice
        options:
          - staging
          - main
      pr_title:
        description: 'Pull request title'
        required: true
        default: 'Promote changes to next environment'

jobs:
  validate-promotion:
    name: Validate Promotion
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.validate.outputs.valid }}
    steps:
      - name: Validate promotion path
        id: validate
        run: |
          source="${{ github.event.inputs.source_branch }}"
          target="${{ github.event.inputs.target_branch }}"
          
          # Validate promotion path
          if [[ "$source" == "develop" && "$target" == "staging" ]]; then
            echo "✅ Valid promotion: develop → staging"
            echo "valid=true" >> $GITHUB_OUTPUT
          elif [[ "$source" == "staging" && "$target" == "main" ]]; then
            echo "✅ Valid promotion: staging → main"
            echo "valid=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Invalid promotion path: $source → $target"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  create-promotion-pr:
    name: Create Promotion PR
    runs-on: ubuntu-latest
    needs: validate-promotion
    if: needs.validate-promotion.outputs.valid == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create promotion branch
        run: |
          timestamp=$(date +%Y%m%d-%H%M%S)
          promotion_branch="promote/${{ github.event.inputs.source_branch }}-to-${{ github.event.inputs.target_branch }}-$timestamp"
          
          git checkout -b "$promotion_branch" "origin/${{ github.event.inputs.source_branch }}"
          git push origin "$promotion_branch"
          
          echo "PROMOTION_BRANCH=$promotion_branch" >> $GITHUB_ENV

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits between target and source branches
          changelog=$(git log --oneline --no-merges origin/${{ github.event.inputs.target_branch }}..origin/${{ github.event.inputs.source_branch }})
          
          # Format changelog for PR body
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes included in this promotion" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Commits" >> $GITHUB_OUTPUT
          echo "$changelog" | while read line; do
            echo "- $line" >> $GITHUB_OUTPUT
          done
          echo "" >> $GITHUB_OUTPUT
          echo "### Deployment checklist" >> $GITHUB_OUTPUT
          echo "- [ ] All tests passing" >> $GITHUB_OUTPUT
          echo "- [ ] Security scans completed" >> $GITHUB_OUTPUT
          echo "- [ ] Performance impact assessed" >> $GITHUB_OUTPUT
          echo "- [ ] Rollback plan documented" >> $GITHUB_OUTPUT
          echo "- [ ] Stakeholders notified" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.PROMOTION_BRANCH }}
          base: ${{ github.event.inputs.target_branch }}
          title: "${{ github.event.inputs.pr_title }}"
          body: |
            ## Promotion Request
            
            **Source:** `${{ github.event.inputs.source_branch }}`
            **Target:** `${{ github.event.inputs.target_branch }}`
            **Initiated by:** @${{ github.actor }}
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ---
            
            ⚠️ **Important:** This PR should be merged using the **"Create a merge commit"** strategy to maintain deployment history.
          labels: |
            promotion
            ${{ github.event.inputs.target_branch }}
          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}